package com.keitaitoys.fonteditor.gui.editor;

import javax.swing.undo.AbstractUndoableEdit;
import javax.swing.undo.CannotRedoException;
import javax.swing.undo.CannotUndoException;

import com.keitaitoys.fonteditor.core.FontManager;
import com.keitaitoys.fonteditor.core.LocaleManager;
import com.keitaitoys.fonteditor.font.Font;
import com.keitaitoys.fonteditor.font.Symbol;

public class AddUndoableEdit extends AbstractUndoableEdit {
	
	//////////////////////////////////////////////////////////////////////
	// Description ///////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////

	//////////////////////////////////////////////////////////////////////
	// Consts ////////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////

	private static final String NAME_LOCALIZE_KEY = "editor.undoableedit.add.name";
	private static final String UNDO_NAME_LOCALIZE_KEY = "editor.undoableedit.undo.add.name";
	private static final String REDO_NAME_LOCALIZE_KEY = "editor.undoableedit.redo.add.name";

	//////////////////////////////////////////////////////////////////////
	// Variables /////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////

	private Symbol addedSymbol;
	private Symbol removedSymbol;
		
	//////////////////////////////////////////////////////////////////////
	// Constructor ///////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////

	public AddUndoableEdit(Symbol addedSymbol, Symbol removedSymbol) {
		
		this.addedSymbol = addedSymbol;
		this.removedSymbol = removedSymbol;
		
		init();
	}
	
	//////////////////////////////////////////////////////////////////////
	// Functions /////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////

	private void init() {
		
	}

	//////////////////////////////////////////////////////////////////////
	// Functions /////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////

	public void undo() throws CannotUndoException {
		
		super.undo();

		FontManager fontManager = FontManager.getInstance();
		Font font = fontManager.getFont();
		
		if(font != null) {
			
			font.removeSymbol(addedSymbol);
			if(removedSymbol != null) font.addSymbol(removedSymbol);
		}
	}

	//////////////////////////////////////////////////////////////////////
	// Functions /////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////

	public void redo() throws CannotRedoException {
		
		super.redo();
		
		FontManager fontManager = FontManager.getInstance();
		Font font = fontManager.getFont();
		
		if(font != null) {
			
			if(removedSymbol != null) font.removeSymbol(removedSymbol);
			font.addSymbol(addedSymbol);
		}
	}

	//////////////////////////////////////////////////////////////////////
	// Functions /////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////

	public String getPresentationName() {
		
		LocaleManager localeManager = LocaleManager.getInstance();
		return localeManager.getValue(NAME_LOCALIZE_KEY, addedSymbol.getChar());
	}

	//////////////////////////////////////////////////////////////////////
	// Functions /////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////

	public String getUndoPresentationName() {
		
		LocaleManager localeManager = LocaleManager.getInstance();
		return localeManager.getValue(UNDO_NAME_LOCALIZE_KEY, addedSymbol.getChar());
	}

	//////////////////////////////////////////////////////////////////////
	// Functions /////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////

	public String getRedoPresentationName() {
		
		LocaleManager localeManager = LocaleManager.getInstance();
		return localeManager.getValue(REDO_NAME_LOCALIZE_KEY, addedSymbol.getChar());
	}
}
